// Generated by Dagger (https://dagger.dev).
package com.example.myapplication.Repo;

import com.example.myapplication.remote.ApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Repository_Factory implements Factory<Repository> {
  private final Provider<ApiClient> apiClientProvider;

  public Repository_Factory(Provider<ApiClient> apiClientProvider) {
    this.apiClientProvider = apiClientProvider;
  }

  @Override
  public Repository get() {
    return newInstance(apiClientProvider.get());
  }

  public static Repository_Factory create(Provider<ApiClient> apiClientProvider) {
    return new Repository_Factory(apiClientProvider);
  }

  public static Repository newInstance(ApiClient apiClient) {
    return new Repository(apiClient);
  }
}
